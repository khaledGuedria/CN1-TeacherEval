package com.mycompany.khaled;

import com.codename1.components.ImageViewer;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.ComboBox;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Image;
import com.codename1.ui.Slider;
import com.codename1.ui.TextArea;
import java.util.ArrayList;
import java.util.List;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    //var
    String teacherName = "";
    String teacherImg = "";
    int sliderProgress = 10;

    //widgets
    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }

        //var
        List<String> names = new ArrayList<String>();
        names.add("");
        names.add("Bassem Hatira");
        names.add("Nader Rahmen");
        names.add("Sana Ben Fadhel");

        //form 1
        Form f1 = new Form("Teacher Eval", BoxLayout.yCenter());

        //Components
        ComboBox cb = new ComboBox();

        for (String i : names) {
            cb.addItem(i);
        }

        cb.addSelectionListener((oldSelected, newSelected) -> {
            if (newSelected != 0) {
                teacherName = names.get(newSelected);
                if (newSelected == 1) {
                    teacherImg = "bassem.jpg";
                }
                if (newSelected == 2) {
                    teacherImg = "nader.jpg";
                }
                if (newSelected == 3) {
                    teacherImg = "sana.jpg";
                }

                //..
                //Form 2
                Form f2 = new Form(teacherName, BoxLayout.y());

                //Components
                ImageViewer img = new ImageViewer(theme.getImage(teacherImg));

                Label noteLB = new Label("Note : " + sliderProgress);

                Slider slider = new Slider();
                slider.setMinValue(0);
                slider.setMaxValue(20);
                slider.setIncrements(1);
                slider.setProgress(10);
                slider.setEditable(true);
                slider.setThumbImage(theme.getImage("thumb.png"));

                slider.addDataChangedListener((type, index) -> {
                    
                    sliderProgress = slider.getProgress();
                    noteLB.setText("Note : " + sliderProgress);
                });

                Button submitBtn = new Button("Submit");
                submitBtn.addActionListener((evt) -> {
                    //Dialog.show("Confirmation", "Vous avez attribué la note de " + sliderProgress + " à M/Mme " + teacherName + ".", "Back", null);
                    Dialog dlg = new Dialog("Confirmation");
                    dlg.setLayout(BoxLayout.y());
                    Button ok = new Button("Back");
                    ok.addActionListener((evt2) -> {
                        f1.showBack();
                    });
                    dlg.addAll(new SpanLabel("Vous avez attribué la note de " + sliderProgress + " à M/Mme " + teacherName + "."), ok);
                    dlg.showDialog();
                });

                //Show
                f2.addAll(img, noteLB, slider, submitBtn);
                f2.show();

            }
        });
        //show
        f1.add(cb);
        f1.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
